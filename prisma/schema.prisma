generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model BusinessProfile {
  id             Int       @id @default(autoincrement())
  business_name  String    @db.VarChar(255)
  gstin          String    @unique @db.VarChar(15)
  address        String
  city           String    @db.VarChar(100)
  vat_tin        String?   @db.VarChar(20)
  state_id       Int?
  pan_number     String?   @db.VarChar(10)
  bank_name      String?   @db.VarChar(100)
  account_number String?   @db.VarChar(20)
  branch_ifsc    String?   @db.VarChar(20)
  created_at     DateTime  @default(now())
  updated_at     DateTime  @default(now()) @updatedAt
  deletedAt      DateTime?
  state          States?   @relation(fields: [state_id], references: [id])
}

model States {
  id                 Int               @id @default(autoincrement())
  state_name         String            @db.VarChar(50)
  state_code         String            @db.VarChar(2)
  state_numeric_code Int               @unique
  business_profiles  BusinessProfile[]
  Customer           Customer[]
}

model Customer {
  id         Int       @id @default(autoincrement())
  name       String    @db.VarChar(255)
  address    String
  city       String    @db.VarChar(100)
  pincode    String?   @db.VarChar(10)
  gstin      String?   @unique @db.VarChar(15)
  phone      String    @db.VarChar(15)
  email      String?   @db.VarChar(100)
  created_at DateTime  @default(now())
  updated_at DateTime  @default(now()) @updatedAt
  state_id   Int?
  pan_number String?   @db.VarChar(10)
  deletedAt  DateTime?
  state      States?   @relation(fields: [state_id], references: [id])
  invoices   Invoice[]
}

model Invoice {
  id                  Int        @id @default(autoincrement())
  invoice_number      String     @unique @db.VarChar(50)
  invoice_date        DateTime
  transaction_type    String     @db.VarChar(20)
  input_mode          String     @db.VarChar(20)
  eway_bill           String?    @db.VarChar(50)
  buyer_id            Int?
  buyer_name          String     @db.VarChar(255)
  buyer_address       String
  buyer_gstin         String?    @db.VarChar(15)
  buyer_state_code    String?
  tax_type            String     @db.VarChar(20)
  total_invoice_value Decimal    @db.Decimal(12, 3)
  created_at          DateTime   @default(now())
  updated_at          DateTime   @default(now()) @updatedAt
  flagged             Boolean    @default(false)
  deletedAt           DateTime?
  roundoff            Decimal?   @db.Decimal(12, 3)
  customer            Customer?  @relation(fields: [buyer_id], references: [id])
  line_items          LineItem[]
}

model LineItem {
  id            Int           @id @default(autoincrement())
  invoice_id    Int
  hsn_sac_code  String        @db.VarChar(10)
  description   String        @db.VarChar(255)
  quantity      Decimal       @db.Decimal(10, 3)
  unit          String        @db.VarChar(10)
  rate          Decimal       @db.Decimal(12, 3)
  taxable_value Decimal       @db.Decimal(12, 3)
  created_at    DateTime      @default(now())
  roundoff      Decimal       @default(0.00) @db.Decimal(12, 3)
  deletedAt     DateTime?
  invoice       Invoice       @relation(fields: [invoice_id], references: [id])
  taxes         LineItemTax[]
}

model LineItemTax {
  id           Int       @id @default(autoincrement())
  line_item_id Int
  tax_name     String    @db.VarChar(20)
  tax_rate     Decimal   @db.Decimal(5, 3)
  tax_amount   Decimal   @db.Decimal(12, 3)
  created_at   DateTime  @default(now())
  deletedAt    DateTime?
  line_item    LineItem  @relation(fields: [line_item_id], references: [id])
}

model InvoiceSetting {
  id                       Int             @id @default(autoincrement())
  invoice_prefix           String          @default("JVJ/D/") @db.VarChar(20)
  default_transaction_type TransactionType @default(retail)
  number_digits            Int             @default(3)
  default_input_mode       InputMode       @default(component)
  starting_number          Int             @default(1)
  generate_original        Boolean         @default(true)
  generate_duplicate       Boolean         @default(true)
  generate_triplicate      Boolean         @default(true)
  created_at               DateTime        @default(now())
  updated_at               DateTime        @default(now()) @updatedAt
  prefix_inter_city        String          @default("JVJ/D/") @db.VarChar(20)
  prefix_outer_state       String          @default("JVJ/S/") @db.VarChar(20)
  prefix_retail            String          @default("JVJ/D/") @db.VarChar(20)
}

model TaxRate {
  id          Int       @id @default(autoincrement())
  hsn_code    String    @db.VarChar(100)
  description String    @db.VarChar(255)
  created_at  DateTime  @default(now())
  updated_at  DateTime  @default(now()) @updatedAt
  deletedAt   DateTime?
  is_default  Boolean   @default(false)
}

model User {
  id         Int       @id @default(autoincrement())
  email      String    @unique @db.VarChar(100)
  password   String    @db.VarChar(255)
  name       String    @db.VarChar(100)
  role       UserRole  @default(admin)
  is_active  Boolean   @default(true)
  created_at DateTime  @default(now())
  updated_at DateTime  @default(now()) @updatedAt
  deletedAt  DateTime?
}

enum TransactionType {
  retail
  inter_state
  purchase
}

enum InputMode {
  component
  direct
  reverse
}

enum UserRole {
  admin
  user
}
